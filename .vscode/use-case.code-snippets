{
  // Place your barbearia.io workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Create use case": {
    "scope": "javascript,typescript",
    "prefix": "usecase",
    "body": [
      "import * as z from \"zod\";",
      "import { UseCaseBase } from \"~/use-cases/use-case\";",
      "",
      "const inputSchema = z.object({});",
      "type Input = z.infer<typeof inputSchema>;",
      "",
      "const outputSchema = z.object({});",
      "",
      "export class $1UseCase extends UseCaseBase<",
      "  typeof inputSchema,",
      "  typeof outputSchema",
      "> {",
      "  inputSchema = inputSchema;",
      "  outputSchema = outputSchema;",
      "",
      "  execute(input: Input) {",
      "    $0throw new Error(\"Method not implemented.\");",
      "  }",
      "}",
      ""
    ],
    "description": "Use case base"
  }
}
